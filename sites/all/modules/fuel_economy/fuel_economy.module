<?php
$data = null;
/*
 * Implements hook_menu()
 */

function fuel_economy_menu() {
  $items = array();

  $items['fuel_economy'] = array(
    'type' => MENU_CALLBACK,
    'title' => 'Fuel Economy', //titles will be translated automatically
    'page callback' => 'get_data',
    'page arguments' => array(1),
    'access callback' => 'user_access', // user_access is defined by drupal core.  this is called by default but the paramaters below are necessary
    'access arguments' => array('access content')  // this argument is passed the the user_access function
  );

  return $items;
}

function get_years() {
    $items = array('All');
    $result = db_query('SELECT DISTINCT f.year FROM {fuel_economy} f ORDER BY f.year');
    foreach ($result as $record) {
        $items[$record->year] = $record->year;
    }
    return $items;
}

function get_makes() {
    $items = array('All');
    $result = db_query('SELECT DISTINCT f.make FROM {fuel_economy} f ORDER BY f.make');
    foreach ($result as $record) {
        $items[$record->make] = $record->make;
    }
    return $items;
}

function get_make_models() {
    $items = array('All');
    $result = db_query('SELECT DISTINCT make, model FROM {fuel_economy} ORDER BY make, model');
    foreach ($result as $record) {
        $items[$record->make][] = $record->model;
    }
    return $items;
}

function get_categories() {
    $items = array('All');
    $result = db_query('SELECT DISTINCT category FROM {fuel_economy} ORDER BY category');
    foreach ($result as $record) {
        $items[$record->category] = $record->category;
    }
    return $items;
}

function get_cars($year = null, $make = null, $category = null) {
    $query = db_select('fuel_economy', 'f')
    ->fields('f')
    ->orderBy('liters_year')
    ->range(0, 20);
    
    if ($year) $query->condition('year', $year,'=');
    if ($make) $query->condition('make', $make,'=');
    if ($category) $query->condition('category', $category,'=');
    
    $result = $query->execute();
    
    $items = array();

    foreach ($result as $record) {
        $items[] = $record;
    }
    return $items;
}

function form_fuel_economy($form, &$form_state) {
    
    $form = array();
    
    $form['year'] = array(
        '#type' => 'select',
        '#title' => 'Year',
        '#options' => get_years(),
        '#default_value' =>  '2014',
        '#required' => TRUE,
    );
    
     $form['category'] = array(
        '#type' => 'select',
        '#title' => 'Category',
        '#options' => get_categories(),
    );
    
    $form['make'] = array(
        '#type' => 'select',
        '#title' => 'Make',
        '#options' => get_makes(),
    );
    
    $form['buttons']['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Submit',
    );
    
    return $form;
}

function form_fuel_economy_submit(&$form, &$form_state) {
    global $data;
    $values = isset($form_state['values']) ? $form_state['values'] : NULL;   
    $cars = ($values) ? get_cars($values['year'], $values['make'], $values['category']) : get_cars();
    
    $data = $cars;
    
    $form_state['storage'] = $cars;
    $form_state['rebuild'] = TRUE;
    
}

function get_table_markup($data = null) {
    //dsm($data);
    if (count($data) > 0) {
        $markup = '<table>
        <tr>
          <th>#</th>
          <th>Year</th> 
          <th>Make</th>
          <th>Model</th>
          <th>Category</th>     
          <th>Fuel Type</th>
          <th>L/100 city</th>
          <th>L/100 hwy</th>
          <th>liters/year</th>
          <th>C02 / year</th>
        </tr>';
        $i=1;
        foreach ($data as $k => $item) {

            $markup .= '<tr>';
              $markup .= '<td>'. $i++ .'</td>';
              $markup .= '<td>'. $item->year .'</td> ';
              $markup .= '<td>'. $item->make .'</td>';
              $markup .= '<td>'. $item->model .'</td>';
              $markup .= '<td>'. $item->category .'</td>';
              $markup .= '<td>'. $item->fuel_type .'</td>';
              $markup .= '<td>'. $item->liters_city .'</td>';
              $markup .= '<td>'. $item->liters_hwy .'</td>';
              $markup .= '<td>'. $item->liters_year .'</td>';
              $markup .= '<td>'. $item->co2_year .'</td>';
            $markup .= '</tr>';
        }

        $markup .= '</table>';

        $markup .= 'Understanding the Table';
        $markup .= 'Model';
        $markup .= '<ul>';
            $markup .= '<li>4WD/4X4 = Four-wheel drive</li>';
            $markup .= '<li>AWD = All-wheel drive</li>';
            $markup .= '<li>CNG = Compressed natural gas</li>';
            $markup .= '<li>FFV = Flexible-fuel vehicle</li>';
            $markup .= '<li>NGV = Natural gas vehicle</li>';
            $markup .= '<li># = High output engine that provides more power than the standard engine of the same size</li>';
        $markup .= '</ul>';
        $markup .= 'Transmission';
            $markup .= '<ul>';
            $markup .= '<li>A = Automatic</li>';
            $markup .= '<li>AM = Automated manual</li>';
            $markup .= '<li>AS = Automatic with select shift</li>';
            $markup .= '<li>AV = Continuously variable</li>';
            $markup .= '<li>M = Manual</li>';
            $markup .= '<li>Number of gears (3 â€“ 8)</li>';
        $markup .= '</ul>';
        $markup .= 'Fuel Type';
            $markup .= '<ul>';
            $markup .= '<li>D = Diesel</li>';
            $markup .= '<li>E = Ethanol (E85)</li>';
            $markup .= '<li>N = Natural Gas</li>';
            $markup .= '<li>X = Regular gasoline</li>';
            $markup .= '<li>Z = Premium gasoline</li>';
        $markup .= '</ul>';
        $markup .= 'Fuel Consumption: Fuel consumption ratings are shown in litres per 100 kilometres (L/100 km) and in miles per imperial gallon (mi./gal.)';
        $markup .= 'Fuel (L) / Year: Estimated annual fuel use is based on 20 000 km driven and a combined rating of 55 percent city and 45 percent highway.';
        $markup .= 'CO2 Emissions (kg) / Year: Annual carbon dioxide emissions are based on estimated annual fuel use and fuel type.';
        $markup .= '';
    
    } elseif (is_null($data)) {
        $markup = '<p>Please make selections above and submit the form</p>';
    } else {
        $markup = '<p>No Records Found</p>';
    }
    return $markup;
}

function get_data($arg1) {   
  $content = array();
  $content['form'] = drupal_get_form('form_fuel_economy');
  
  global $data;

  
  $content['raw_markup'] = array(
    '#type' => 'markup',
    '#markup' => get_table_markup($data),
    '#prefix' => '<p>',
    '#sufix' => '</p>',
      '#attached' => array(
      'css' => array(
        drupal_get_path('module', 'fuel_economy') . '/fuel-economy.css'
      )
    ),
  );
  
  return $content;
}

